import asyncio
import random

import requests

semaphore = asyncio.Semaphore(20)

async def with_semaphore(coro):
    async with semaphore:
        return await coro

def login():
    api_url = "https://script.google.com/macros/s/AKfycbz8xtZlGyRDXoZv_tR2MtBG8pUmf_kBMMlnFsiyvavcWCOIfQ0qRNcKgJ33qE-kG_vahg/exec"
    params = {
        "type": "dsdkhp",
        "mssv": "3123330021"
    }

    response = requests.get(api_url, params=params)

    if response.status_code == 200:
        data = response.json()
        print("K·∫øt qu·∫£:")
        for row in data:
            print(row)
        return data
    else:
        print("L·ªói:", response.status_code)

async def xulydkmhsinhvien(self, session=None):
    print(f"üü° B·∫Øt ƒë·∫ßu x·ª≠ l√Ω: {self['id']}")
    await asyncio.sleep(random.uniform(1, 3))  # Gi·∫£ l·∫≠p th·ªùi gian x·ª≠ l√Ω kh√°c nhau
    print(f"‚úÖ Xong: {self}")

async def main():
    # T·∫°o danh s√°ch 20 h·ªçc ph·∫ßn gi·∫£ ƒë·ªãnh
    hoc_phans = login()

    # T·∫°o c√°c task, m·ªói task x·ª≠ l√Ω m·ªôt h·ªçc ph·∫ßn, c√≥ gi·ªõi h·∫°n b·∫±ng semaphore
    tasks = [
        with_semaphore(xulydkmhsinhvien(hp))
        for hp in hoc_phans
    ]

    # Ch·∫°y t·∫•t c·∫£ c√°c task song song, nh∆∞ng ch·ªâ t·ªëi ƒëa 10 c√πng l√∫c
    await asyncio.gather(*tasks)

asyncio.run(main())
